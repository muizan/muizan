 bool help(string ans,int cnt,vector<int>temp){
        int val=0;
       // cout<<ans<<" "<<cnt;
        for(auto x:ans){
            if(temp[x-'a']>0){
              //  cout<<x<<" ";
                temp[x-'a']--;
                val++;
            }
        }
       // cout<<val<<endl;
        if(val==cnt){
            return 1;
        }
        return 0;
    }
    vector<string> wordSubsets(vector<string>& words1, vector<string>& words2) {
       vector<int>v(26);
        vector<string>ans;
        for(auto x:words2){
            vector<int>t(26);
            for(auto y:x){
                t[y-'a']++;
            }
            for(int i=0;i<26;i++){
                if(v[i]<t[i]){
                    v[i]=t[i];
                }
            }
        }
        int cnt=0;
        for(auto x:v){
            if(x>0){
                cnt+=x;
            }
        }
        for(auto x:words1){
                if(help(x,cnt,v)){
                    ans.push_back(x);
                }
        }
        return ans;
    }
