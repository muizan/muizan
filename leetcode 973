  vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        vector<vector<int>>ans;
        priority_queue<int,vector<int>,greater<int>>p;
        map<int,vector<pair<int,int>>>m;
        int n=points.size();
        for(int i=0;i<n;i++){
                int sq=points[i][0]*points[i][0]+points[i][1]*points[i][1];
                p.push(abs(sq));
               m[abs(sq)].push_back({points[i][0],points[i][1]});
        }
       int cnt=0;
        while(!p.empty()){
            for(auto x:m[p.top()]){
                if(cnt==k){
                    return ans;
                }
               vector<int>temp;
                temp.push_back(x.first);
                temp.push_back(x.second);
                ans.push_back(temp);
                cnt++;
            }
            p.pop();
        }
       return ans; 
    }
